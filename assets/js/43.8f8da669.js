(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{626:function(t,_,v){"use strict";v.r(_);var e=v(4),r=Object(e.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"技术概念规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#技术概念规范"}},[t._v("#")]),t._v(" 技术概念规范")]),t._v(" "),v("p"),v("div",{staticClass:"table-of-contents"},[v("ul",[v("li",[v("a",{attrs:{href:"#flag"}},[t._v("flag")])]),v("li",[v("a",{attrs:{href:"#编程范式"}},[t._v("编程范式")])]),v("li",[v("a",{attrs:{href:"#接口定义"}},[t._v("接口定义")])]),v("li",[v("a",{attrs:{href:"#http"}},[t._v("HTTP")])]),v("li",[v("a",{attrs:{href:"#网络通信协议"}},[t._v("网络通信协议")])]),v("li",[v("a",{attrs:{href:"#switch"}},[t._v("switch")])]),v("li",[v("a",{attrs:{href:"#directory和folder区别"}},[t._v("directory和folder区别")])]),v("li",[v("a",{attrs:{href:"#进制"}},[t._v("进制")])]),v("li",[v("a",{attrs:{href:"#逻辑运算符"}},[t._v("逻辑运算符")])]),v("li",[v("a",{attrs:{href:"#字符编码"}},[t._v("字符编码")])]),v("li",[v("a",{attrs:{href:"#cron表达式"}},[t._v("Cron表达式")])]),v("li",[v("a",{attrs:{href:"#命名规范"}},[t._v("命名规范")])]),v("li",[v("a",{attrs:{href:"#gnu风格版本规则"}},[t._v("GNU风格版本规则")])]),v("li",[v("a",{attrs:{href:"#多线程"}},[t._v("多线程")]),v("ul",[v("li",[v("a",{attrs:{href:"#线程数量控制"}},[t._v("线程数量控制")])])])]),v("li",[v("a",{attrs:{href:"#算法复杂度"}},[t._v("算法复杂度")])]),v("li",[v("a",{attrs:{href:"#缓存"}},[t._v("缓存")])]),v("li",[v("a",{attrs:{href:"#锁和事务"}},[t._v("锁和事务")])]),v("li",[v("a",{attrs:{href:"#http授权认证"}},[t._v("HTTP授权认证")]),v("ul",[v("li",[v("a",{attrs:{href:"#oauth2和jwt区别与联系"}},[t._v("OAuth2和JWT区别与联系")])])])]),v("li",[v("a",{attrs:{href:"#加密哈希"}},[t._v("加密哈希")])])])]),v("p"),t._v(" "),v("h2",{attrs:{id:"flag"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#flag"}},[t._v("#")]),t._v(" flag")]),t._v(" "),v("ul",[v("li",[t._v("代码不是靠死记硬背，而是不停的写、不停的思考，在反复的练习中熟练掌握的。")]),t._v(" "),v("li",[t._v("编程需要学习记住的是：不同的场景中一些实现方式的原理机制、思维方式，如：设计模式、排序算法、数据结构等，而不是具体的代码。")]),t._v(" "),v("li",[v("strong",[t._v("千万不要尝试用记忆力去替代自己的理解力！")])])]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E4%BB%A5%E8%A7%92%E8%89%B2%E7%82%BA%E5%9F%BA%E7%A4%8E%E7%9A%84%E5%AD%98%E5%8F%96%E6%8E%A7%E5%88%B6",target:"_blank",rel:"noopener noreferrer"}},[t._v("角色访问控制模型RBAC96"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://github.com/Wei-Xia/most-frequent-technology-english-words",target:"_blank",rel:"noopener noreferrer"}},[t._v("程序员工作中常见的英语词汇"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://github.com/aisuhua/restful-api-design-references",target:"_blank",rel:"noopener noreferrer"}},[t._v("RESTful API 设计参考文献列表"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://www.jianshu.com/p/cd7bfa8d51b7",target:"_blank",rel:"noopener noreferrer"}},[t._v("RESTful跟WebService的区别"),v("OutboundLink")],1)])]),t._v(" "),v("blockquote",[v("p",[t._v("RESTful是一种架构风格，其核心是面向资源，更简单；而WebService底层SOAP协议，主要核心是面向活动；两个都是通过web请求调用接口")])]),t._v(" "),v("ul",[v("li",[t._v("设计模式："),v("a",{attrs:{href:"https://refactoringguru.cn/design-patterns",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://refactoringguru.cn/design-patterns"),v("OutboundLink")],1)]),t._v(" "),v("li",[t._v("用C实现的所有算法："),v("a",{attrs:{href:"https://github.com/TheAlgorithms/C",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/TheAlgorithms/C"),v("OutboundLink")],1)]),t._v(" "),v("li",[t._v("C++ 那些事: "),v("a",{attrs:{href:"https://github.com/Light-City/CPlusPlusThings",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/Light-City/CPlusPlusThings"),v("OutboundLink")],1)]),t._v(" "),v("li",[t._v("C++ 设计模式: "),v("a",{attrs:{href:"https://github.com/JakubVojvoda/design-patterns-cpp",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/JakubVojvoda/design-patterns-cpp"),v("OutboundLink")],1)])]),t._v(" "),v("h2",{attrs:{id:"编程范式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#编程范式"}},[t._v("#")]),t._v(" 编程范式")]),t._v(" "),v("blockquote",[v("p",[t._v("编程范型、编程范式或程序设计法（Programming Paradigm）是某种编程语言典型的编程风格或者说是编程方式")])]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://en.wikipedia.org/wiki/Programming_paradigm",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://en.wikipedia.org/wiki/Programming_paradigm"),v("OutboundLink")],1)])]),t._v(" "),v("blockquote",[v("p",[t._v("范类：强类型/弱类型，动态语言/静态语言，编译/解释")])]),t._v(" "),v("ul",[v("li",[t._v("过程化（命令式）编程")]),t._v(" "),v("li",[t._v("事件驱动编程")]),t._v(" "),v("li",[t._v("面向对象编程")]),t._v(" "),v("li",[t._v("链式编程")]),t._v(" "),v("li",[t._v("函数式编程")]),t._v(" "),v("li",[t._v("并发编程")]),t._v(" "),v("li",[t._v("约束编程")]),t._v(" "),v("li",[t._v("数据流编程（Dataflow programming）")]),t._v(" "),v("li",[t._v("声明性编程")]),t._v(" "),v("li",[t._v("分布式的编程")]),t._v(" "),v("li",[t._v("泛型编程")]),t._v(" "),v("li",[t._v("逻辑编程")]),t._v(" "),v("li",[t._v("元编程")]),t._v(" "),v("li",[t._v("响应式/反应式编程（Reactive programming）")]),t._v(" "),v("li",[t._v("面向方面/面向切面编程（AOP）")]),t._v(" "),v("li",[t._v("过程式编程")])]),t._v(" "),v("h2",{attrs:{id:"接口定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#接口定义"}},[t._v("#")]),t._v(" 接口定义")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://www.jianshu.com/p/8f1c70e42d32",target:"_blank",rel:"noopener noreferrer"}},[t._v("技术概念大揭秘-RPC/Restful/HTTP/SOAP/WebService傻傻分不清楚？"),v("OutboundLink")],1)])]),t._v(" "),v("ul",[v("li",[t._v("HTTP接口：基于HTTP协议的开发接口，如HTTP POST/GET")]),t._v(" "),v("li",[t._v("SOAP接口：是一种轻量的、简单的、基于XML（标准通用标记语言下的一个子集）的协议，它被设计成在WEB上交换结构化的和固化的信息。")]),t._v(" "),v("li",[t._v("Restful接口：一种接口规范，符合这套规范编写的接口就是restful 接口")]),t._v(" "),v("li",[t._v("Webservice接口：一种跨编程语言和跨操作系统平台的远程调用技术。SOAP/Restful都属于WebService接口。主要是系统间的调用。")]),t._v(" "),v("li",[t._v("RPC协议：远程过程调用，它是一种通过网络从远程计算机程序上跨语言跨平台的请求服务。主要是分布式式系统中应用。")])]),t._v(" "),v("h2",{attrs:{id:"http"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" HTTP")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://github.com/whatwg",target:"_blank",rel:"noopener noreferrer"}},[t._v("WHATWG技术的标准"),v("OutboundLink")],1),t._v(" "),v("a",{attrs:{href:"https://spec.whatwg.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://spec.whatwg.org"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://www.iana.org/assignments/media-types/media-types.xhtml",target:"_blank",rel:"noopener noreferrer"}},[t._v("互联网号码分配机构（IANA）官方MIME类型列表"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://tool.oschina.net/commons",target:"_blank",rel:"noopener noreferrer"}},[t._v("常用对照表"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://www.runoob.com/http/http-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.runoob.com/http/http-tutorial.html"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://developer.mozilla.org/zh-CN/docs/Web/HTTP"),v("OutboundLink")],1)])]),t._v(" "),v("blockquote",[v("p",[v("code",[t._v("Content-Type")]),t._v("只会存在于"),v("code",[t._v("POST")]),t._v("、"),v("code",[t._v("PATCH")]),t._v("、"),v("code",[t._v("PUT")]),t._v("等有请求数据实体时指定数据类型和数据字符集编码，\n而"),v("code",[t._v("GET")]),t._v("、"),v("code",[t._v("DELETE")]),t._v("、"),v("code",[t._v("HEAD")]),t._v("、"),v("code",[t._v("OPTIONS")]),t._v("、"),v("code",[t._v("TRACE")]),t._v("等没有请求数据实体")])]),t._v(" "),v("blockquote",[v("p",[v("code",[t._v("Content-Length")]),t._v("则视"),v("code",[t._v("Content-Type")]),t._v("而定，如"),v("code",[t._v("text/html")]),t._v("、"),v("code",[t._v("text/javascript")]),t._v("等请求数据没有"),v("code",[t._v("Content-Length")])])]),t._v(" "),v("blockquote",[v("p",[v("code",[t._v("POST")]),t._v("、"),v("code",[t._v("PATCH")]),t._v("、"),v("code",[t._v("PUT")]),t._v("等请求有请求数据实体的数据为表单参数，\n"),v("code",[t._v("GET")]),t._v("、"),v("code",[t._v("DELETE")]),t._v("、"),v("code",[t._v("HEAD")]),t._v("、"),v("code",[t._v("OPTIONS")]),t._v("、"),v("code",[t._v("TRACE")]),t._v("等没有请求数据实体的查询参数拼接在URL"),v("code",[t._v("?")]),t._v("后面")])]),t._v(" "),v("h2",{attrs:{id:"网络通信协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络通信协议"}},[t._v("#")]),t._v(" 网络通信协议")]),t._v(" "),v("p",[v("strong",[t._v("应用层")])]),t._v(" "),v("ul",[v("li",[t._v("HTTP（Hypertext Transfer Protocol）超文本传输协议，显示网页")]),t._v(" "),v("li",[t._v("DNS（Domain Name System）")]),t._v(" "),v("li",[t._v("FTP（File Transfer Protocol）")]),t._v(" "),v("li",[t._v("SFTP（SSH File Transfer Protocol）和FTP不一样")]),t._v(" "),v("li",[t._v("SCP（Secure copy）基于SSH")]),t._v(" "),v("li",[t._v("SSH （Secure Shell）")]),t._v(" "),v("li",[t._v("SMTP（Simple Mail Transfer Protocol）")]),t._v(" "),v("li",[t._v("SNMP（simple Network Management Protocol）")])]),t._v(" "),v("p",[v("strong",[t._v("通信层")])]),t._v(" "),v("ul",[v("li",[t._v("TCP（Transmission Control Protocol 三次握手传输协议）")]),t._v(" "),v("li",[t._v("UDP（User Datagram Protocol）")])]),t._v(" "),v("p",[v("strong",[t._v("网络层")])]),t._v(" "),v("ul",[v("li",[t._v("IP（Internet Protocol）")]),t._v(" "),v("li",[t._v("ICMP（Internet Control Message Protocol，主要用于路由发送错误报告）")])]),t._v(" "),v("p",[v("strong",[t._v("链接层")])]),t._v(" "),v("ul",[v("li",[t._v("MAC（media access control）")])]),t._v(" "),v("h2",{attrs:{id:"switch"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#switch"}},[t._v("#")]),t._v(" switch")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("在Python中没有"),v("code",[t._v("switch")]),t._v("语法")])]),t._v(" "),v("li",[v("p",[t._v("JavaScript的"),v("code",[t._v("switch")]),t._v("语法跟Java一样")])]),t._v(" "),v("li",[v("p",[t._v("在Java中")])])]),t._v(" "),v("blockquote",[v("p",[t._v("如果"),v("code",[t._v("default")]),t._v("不是"),v("code",[t._v("switch")]),t._v("代码块中最后一个"),v("code",[t._v("case")]),t._v("，请记得用"),v("code",[t._v("break;")]),t._v("结束默认"),v("code",[t._v("case")]),t._v("。")])]),t._v(" "),v("div",{staticClass:"language-java extra-class"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("toLowerCase")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意：此处如果条件满足但没有添加break，则代码会继续执行，")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会无条件执行后面的语句，直到遇到break")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//break;")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果default写在最前面，会先执行，")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但是如果没有写break;还是会无条件执行后面的语句")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),v("ul",[v("li",[t._v("在Go中")])]),t._v(" "),v("ol",[v("li",[t._v("左花括号"),v("code",[t._v("{")]),t._v("必须与"),v("code",[t._v("switch")]),t._v("处于同一行；")]),t._v(" "),v("li",[t._v("条件表达式不限制为常量或者整数；")]),t._v(" "),v("li",[t._v("单个"),v("code",[t._v("case")]),t._v("中，可以出现多个结果选项，以"),v("code",[t._v(",")]),t._v("分割；")]),t._v(" "),v("li",[t._v("与C语言等规则相反，Go语言不需要用"),v("code",[t._v("break")]),t._v("来明确退出一个"),v("code",[t._v("case")]),t._v("；")]),t._v(" "),v("li",[t._v("只有在"),v("code",[t._v("case")]),t._v("中明确添加"),v("code",[t._v("fallthrough")]),t._v("关键字，才会继续执行紧跟的下一个"),v("code",[t._v("case")]),t._v("；")]),t._v(" "),v("li",[t._v("可以不设定"),v("code",[t._v("switch")]),t._v("之后的条件表达式，在此种情况下，整个"),v("code",[t._v("switch")]),t._v("结构与多个"),v("code",[t._v("if...else...")]),t._v("的逻辑作用等同。")])]),t._v(" "),v("div",{staticClass:"language-go extra-class"},[v("pre",{pre:!0,attrs:{class:"language-go"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" strings"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("ToLower")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    fmt"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    fmt"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    fmt"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),v("h2",{attrs:{id:"directory和folder区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#directory和folder区别"}},[t._v("#")]),t._v(" directory和folder区别")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("directory")]),t._v(" 目录，简称 "),v("code",[t._v("dir")])]),t._v(" "),v("li",[v("code",[t._v("folder")]),t._v(" 文件夹")])]),t._v(" "),v("blockquote",[v("p",[t._v("两者一般情况下是可以相互通用的，都表示文件夹的意思；但是细细纠来，还是有区别的：")])]),t._v(" "),v("blockquote",[v("p",[v("code",[t._v('Hi, please go to D:\\files\\images\\directory, and then double click and open folder "travelImg".')])])]),t._v(" "),v("ul",[v("li",[t._v("看完上面那句话，相信大家有点知道意思了：")])]),t._v(" "),v("blockquote",[v("p",[v("code",[t._v("directory")]),t._v(" 也是一个"),v("code",[t._v("folder")]),t._v("，但是我们在说一个"),v("code",[t._v("directory")]),t._v("的时候，通常指它含有"),v("code",[t._v("路径")]),t._v("的意思在里面；")])]),t._v(" "),v("blockquote",[v("p",[v("code",[t._v("folder")]),t._v(" 一般情况，是说某一个文件夹，通常不包含"),v("code",[t._v("路径")]),t._v("的意思，比如：双击这个文件夹，在里面找找看。")])]),t._v(" "),v("h2",{attrs:{id:"进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进制"}},[t._v("#")]),t._v(" 进制")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("进制")]),t._v(" "),v("th",[t._v("英文")]),t._v(" "),v("th",[t._v("范围")]),t._v(" "),v("th",[t._v("前缀")]),t._v(" "),v("th",[t._v("后缀")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("二进制")]),t._v(" "),v("td",[t._v("Binary")]),t._v(" "),v("td",[t._v("0-1")]),t._v(" "),v("td",[t._v("0b")]),t._v(" "),v("td",[t._v("B")])]),t._v(" "),v("tr",[v("td",[t._v("八进制")]),t._v(" "),v("td",[t._v("Octal")]),t._v(" "),v("td",[t._v("0-7")]),t._v(" "),v("td",[t._v("0/0O")]),t._v(" "),v("td",[t._v("O")])]),t._v(" "),v("tr",[v("td",[t._v("十进制")]),t._v(" "),v("td",[t._v("Decimal")]),t._v(" "),v("td",[t._v("0-9")]),t._v(" "),v("td",[t._v("无")]),t._v(" "),v("td",[t._v("D")])]),t._v(" "),v("tr",[v("td",[t._v("十六进制")]),t._v(" "),v("td",[t._v("Hexadecimal")]),t._v(" "),v("td",[t._v("0-9, A-F")]),t._v(" "),v("td",[t._v("0x")]),t._v(" "),v("td",[t._v("H")])])])]),t._v(" "),v("h2",{attrs:{id:"逻辑运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#逻辑运算符"}},[t._v("#")]),t._v(" 逻辑运算符")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("运算符")]),t._v(" "),v("th",[t._v("说明")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("AND")]),t._v(" "),v("td",[t._v("与(&&)")])]),t._v(" "),v("tr",[v("td",[t._v("EQ")]),t._v(" "),v("td",[t._v("EQUAL等于(==)")])]),t._v(" "),v("tr",[v("td",[t._v("GE")]),t._v(" "),v("td",[t._v("GREATER THAN OR EQUAL 大于等于(>=)")])]),t._v(" "),v("tr",[v("td",[t._v("GT")]),t._v(" "),v("td",[t._v("GREATER THAN大于(>)")])]),t._v(" "),v("tr",[v("td",[t._v("LE")]),t._v(" "),v("td",[t._v("LESS THAN OR EQUAL 小于等于(<=)")])]),t._v(" "),v("tr",[v("td",[t._v("LT")]),t._v(" "),v("td",[t._v("LESS THAN小于(<)")])]),t._v(" "),v("tr",[v("td",[t._v("NE")]),t._v(" "),v("td",[t._v("NOT EQUAL不等于(!=)")])]),t._v(" "),v("tr",[v("td",[t._v("NOT")]),t._v(" "),v("td",[t._v("非(!)")])]),t._v(" "),v("tr",[v("td",[t._v("OR")]),t._v(" "),v("td",[t._v("或(||)")])])])]),t._v(" "),v("h2",{attrs:{id:"字符编码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#字符编码"}},[t._v("#")]),t._v(" 字符编码")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://unicode-table.com/cn",target:"_blank",rel:"noopener noreferrer"}},[t._v("Unicode®字符百科"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://www.fuhaoku.net/blocks",target:"_blank",rel:"noopener noreferrer"}},[t._v("统一码所有区段"),v("OutboundLink")],1)])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("Unicode")]),t._v(" "),v("th",[t._v("意义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("u0024")]),t._v(" "),v("td",[t._v("$")])]),t._v(" "),v("tr",[v("td",[t._v("u0028")]),t._v(" "),v("td",[t._v("(")])]),t._v(" "),v("tr",[v("td",[t._v("u0029")]),t._v(" "),v("td",[t._v(")")])]),t._v(" "),v("tr",[v("td",[t._v("u002A")]),t._v(" "),v("td",[t._v("*")])]),t._v(" "),v("tr",[v("td",[t._v("u002B")]),t._v(" "),v("td",[t._v("+")])]),t._v(" "),v("tr",[v("td",[t._v("u002E")]),t._v(" "),v("td",[t._v(".")])]),t._v(" "),v("tr",[v("td",[t._v("u003F")]),t._v(" "),v("td",[t._v("?")])]),t._v(" "),v("tr",[v("td",[t._v("u005B")]),t._v(" "),v("td",[t._v("[")])]),t._v(" "),v("tr",[v("td",[t._v("u005C")]),t._v(" "),v("td",[v("code",[t._v("\\")])])]),t._v(" "),v("tr",[v("td",[t._v("u005E")]),t._v(" "),v("td",[t._v("^")])]),t._v(" "),v("tr",[v("td",[t._v("u007B")]),t._v(" "),v("td",[t._v("{")])]),t._v(" "),v("tr",[v("td",[t._v("u007C")]),t._v(" "),v("td",[v("code",[t._v("|")])])]),t._v(" "),v("tr",[v("td",[t._v("u007D")]),t._v(" "),v("td",[t._v("}")])]),t._v(" "),v("tr",[v("td",[t._v("u0009")]),t._v(" "),v("td",[t._v("t")])]),t._v(" "),v("tr",[v("td",[t._v("u000A")]),t._v(" "),v("td",[t._v("n")])]),t._v(" "),v("tr",[v("td",[t._v("u000D")]),t._v(" "),v("td",[t._v("r")])]),t._v(" "),v("tr",[v("td",[t._v("u0022")]),t._v(" "),v("td",[t._v('"')])]),t._v(" "),v("tr",[v("td",[t._v("u002C")]),t._v(" "),v("td",[t._v(",")])]),t._v(" "),v("tr",[v("td",[t._v("u003A")]),t._v(" "),v("td",[t._v(":")])])])]),t._v(" "),v("h2",{attrs:{id:"cron表达式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cron表达式"}},[t._v("#")]),t._v(" Cron表达式")]),t._v(" "),v("ul",[v("li",[t._v("特殊符")])]),t._v(" "),v("ol",[v("li",[v("code",[t._v("*")]),t._v(" 每一(每一分)")]),t._v(" "),v("li",[v("code",[t._v("?")]),t._v(" 表示不关心,任意")]),t._v(" "),v("li",[v("code",[t._v("-")]),t._v(" 范围 (小时:1-12,1到12点运行)")]),t._v(" "),v("li",[v("code",[t._v(",")]),t._v(" 标示多个值 (小时 1,2,3 1点2点3点运行)")]),t._v(" "),v("li",[v("code",[t._v("/")]),t._v(" 递增触发(0/15,从0开始每15秒运行一次)")]),t._v(" "),v("li",[v("code",[t._v("L")]),t._v(" 最后(日L,当月最后一天,周L周六)")]),t._v(" "),v("li",[v("code",[t._v("W")]),t._v(" 指定日期最近的工作日(周一到周五)")]),t._v(" "),v("li",[v("code",[t._v("##")]),t._v(" 序号(表示每月的第几个周几)")])]),t._v(" "),v("ul",[v("li",[t._v("CronTrigger配置格式: [秒] [分] [小时] [日] [月] [周] [年]")])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("序号")]),t._v(" "),v("th",[t._v("说明")]),t._v(" "),v("th",[t._v("是否必填")]),t._v(" "),v("th",[t._v("允许填写的值")]),t._v(" "),v("th",[t._v("允许的通配符")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("1")]),t._v(" "),v("td",[t._v("秒")]),t._v(" "),v("td",[t._v("是")]),t._v(" "),v("td",[t._v("0-59")]),t._v(" "),v("td",[t._v(", - * /")])]),t._v(" "),v("tr",[v("td",[t._v("2")]),t._v(" "),v("td",[t._v("分")]),t._v(" "),v("td",[t._v("是")]),t._v(" "),v("td",[t._v("0-59")]),t._v(" "),v("td",[t._v(", - * /")])]),t._v(" "),v("tr",[v("td",[t._v("3")]),t._v(" "),v("td",[t._v("小时")]),t._v(" "),v("td",[t._v("是")]),t._v(" "),v("td",[t._v("0-23")]),t._v(" "),v("td",[t._v(", - * /")])]),t._v(" "),v("tr",[v("td",[t._v("4")]),t._v(" "),v("td",[t._v("日")]),t._v(" "),v("td",[t._v("是")]),t._v(" "),v("td",[t._v("1-31")]),t._v(" "),v("td",[t._v(", - * ? / L W")])]),t._v(" "),v("tr",[v("td",[t._v("5")]),t._v(" "),v("td",[t._v("月")]),t._v(" "),v("td",[t._v("是")]),t._v(" "),v("td",[t._v("1-12 or JAN-DEC")]),t._v(" "),v("td",[t._v(", - * /")])]),t._v(" "),v("tr",[v("td",[t._v("6")]),t._v(" "),v("td",[t._v("周")]),t._v(" "),v("td",[t._v("是")]),t._v(" "),v("td",[t._v("1-7 or SUN-SAT")]),t._v(" "),v("td",[t._v(", - * ? / L ##")])]),t._v(" "),v("tr",[v("td",[t._v("7")]),t._v(" "),v("td",[t._v("年")]),t._v(" "),v("td",[t._v("是")]),t._v(" "),v("td",[t._v("empty或1970-2099")]),t._v(" "),v("td",[t._v(", - * /")])])])]),t._v(" "),v("h2",{attrs:{id:"命名规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#命名规范"}},[t._v("#")]),t._v(" 命名规范")]),t._v(" "),v("ul",[v("li",[t._v("驼峰式命名法介绍：驼峰式命名法由小(大)写字母开始，后续每个单词首字母都大写。\n"),v("ul",[v("li",[t._v("Pascal Case （大驼峰）式命名法：首字母大写。")]),t._v(" "),v("li",[t._v("Camel Case （小驼峰）式命名法：首字母小写。")])])])]),t._v(" "),v("ul",[v("li",[t._v("项目名：全部小写，可使用"),v("code",[t._v("-")]),t._v("或"),v("code",[t._v("_")]),t._v("连接符以分割单词，且不能有空格、中文和其他特殊字符")]),t._v(" "),v("li",[t._v("包名：全部小写，单词不需分割，且不能有空格、中文和其他特殊字符")]),t._v(" "),v("li",[t._v("常量：全部大写，可使用"),v("code",[t._v("_")]),t._v("连接符以分割单词")]),t._v(" "),v("li",[t._v("变量：小驼峰式命名法，前缀应当是名词。尽量在变量名字中体现所属类型，如：length、count表示数字类型；name、title表示字符串类型")]),t._v(" "),v("li",[t._v("函数：小驼峰式命名法，前缀应当为动词。")])]),t._v(" "),v("ul",[v("li",[t._v("代码中的命名均不能以下划线或美元符号开始，也不能以下划线或美元符号结束。")]),t._v(" "),v("li",[t._v("代码中的命名严禁使用拼音与英文混合的方式，更不允许直接使用中文的方式。注意，即使纯拼音命名方式也要避免采用。")]),t._v(" "),v("li",[t._v("类名使用UpperCamelCase风格，但以下情形例外：DO / BO / DTO / VO / AO / PO等。")]),t._v(" "),v("li",[t._v("方法名、参数名、成员变量、局部变量都统一使用lowerCamelCase风格，必须遵从驼峰形式。")]),t._v(" "),v("li",[t._v("常量命名全部大写，单词间用下划线隔开，力求语义表达完整清楚，不要嫌名字长。")]),t._v(" "),v("li",[t._v("抽象类命名使用Abstract或Base开头。")]),t._v(" "),v("li",[t._v("异常类命名使用Exception结尾。")]),t._v(" "),v("li",[t._v("测试类命名以它要测试的类名开始，以Test结尾。")]),t._v(" "),v("li",[t._v("类型与中括号紧挨相连来定义数组。")]),t._v(" "),v("li",[t._v("POJO类中布尔类型的变量，都不要加is前缀，否则部分框架解析会引起序列化错误。")]),t._v(" "),v("li",[t._v("包名统一使用小写，点分隔符之间有且仅有一个自然语义的英语单词。包名统一使用单数形式，但是类名如果有复数含义，类名可以使用复数形式。")]),t._v(" "),v("li",[t._v("杜绝完全不规范的缩写，避免望文不知义。")]),t._v(" "),v("li",[t._v("最好逐一声明每个变量而不是写在一行。")]),t._v(" "),v("li",[t._v("Java的变量声明尽量靠近变量第一次使用的地方。")])]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://www.cnblogs.com/polk6/p/4660195.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 开发规范"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://www.cnblogs.com/caixueliang/p/7469638.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java开发相关命名规范"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://github.com/alibaba/p3c/blob/master/%E9%98%BF%E9%87%8C%E5%B7%B4%E5%B7%B4Java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C%EF%BC%88%E5%8D%8E%E5%B1%B1%E7%89%88%EF%BC%89.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("阿里巴巴Java开发手册（华山版）：编程规约.命名风格"),v("OutboundLink")],1)])]),t._v(" "),v("h2",{attrs:{id:"gnu风格版本规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#gnu风格版本规则"}},[t._v("#")]),t._v(" GNU风格版本规则")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://semver.org/lang/zh-CN",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://semver.org/lang/zh-CN"),v("OutboundLink")],1)])]),t._v(" "),v("ul",[v("li",[v("code",[t._v("MAJOR.MINOR.PATCH")]),t._v("即： "),v("code",[t._v("主版本号.次版本号.修正版本号")])]),t._v(" "),v("li",[v("code",[t._v("Major.Minor.Revision")]),t._v("即： "),v("code",[t._v("主版本号.次版本号.修正版本号")])])]),t._v(" "),v("ol",[v("li",[v("p",[v("code",[t._v("Major")]),t._v(" 主版本号：表示当前APR的主版本号，它的变化通常意味着APR的巨大的变化，比如体系结构的重新设计、API的重新设计、\n重大的重构、重大的"),v("code",[t._v("feature")]),t._v("改动、重大的不兼容性的变化等等，而且这种变化通常会导致APR版本的向前不兼容。")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("Minor")]),t._v(" 次版本号：发布较大的新"),v("code",[t._v("feature")]),t._v("功能，或者较大的重构或者模块变化，或者出现不兼容性改动，会增加子版本号；\n子版本的发布会伴随着完整的"),v("code",[t._v("change log")]),t._v("，算是一个较大的版本发布，有仪式感")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("Revision")]),t._v("/"),v("code",[t._v("PATCH")]),t._v(" 修正版本号：往往是"),v("code",[t._v("bug fix")]),t._v("，或者增加较小的"),v("code",[t._v("feature")]),t._v("，较小的功能改进或者模块变化，\n在保证完整向后兼容的前提下，会增加修正版本号")])]),t._v(" "),v("li",[v("p",[t._v("当主版本号增加时，子版本号及修正版本号置"),v("code",[t._v("0")])])]),t._v(" "),v("li",[v("p",[t._v("当子版本号增加时，修正版本号置"),v("code",[t._v("0")])])])]),t._v(" "),v("p",[v("strong",[t._v("按照测试过程标识")])]),t._v(" "),v("ol",[v("li",[v("code",[t._v("Alpha")]),t._v("版：预览版或内部测试版，一般不向外部发布，会有很多Bug。")]),t._v(" "),v("li",[v("code",[t._v("Beta")]),t._v("版：公测版。")]),t._v(" "),v("li",[v("code",[t._v("RC")]),t._v("版："),v("code",[t._v("Release Candidate")]),t._v("候选版本。也叫做"),v("code",[t._v("Gamma")]),t._v("版本。")])]),t._v(" "),v("h2",{attrs:{id:"多线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#多线程"}},[t._v("#")]),t._v(" 多线程")]),t._v(" "),v("p",[t._v("并发、并行、同步、异步、多线程、协程的区别")]),t._v(" "),v("blockquote",[v("p",[t._v("对操作系统来说，线程是最小的执行单元，进程是最小的资源管理单元。无论进程还是线程，都是由操作系统所管理的。")])]),t._v(" "),v("blockquote",[v("p",[t._v("协程(Coroutine)编译器级的，进程(Process)和线程(Thread)操作系统级的，"),v("code",[t._v("Process")]),t._v(" -> "),v("code",[t._v("Thread")]),t._v(" -> "),v("code",[t._v("Coroutine")])])]),t._v(" "),v("ul",[v("li",[t._v("并发")])]),t._v(" "),v("blockquote",[v("p",[t._v("同一时间段有几个程序都处于已经启动到运行完毕之间，并且这几个程序都在同一个处理机上运行，并发的两种关系是同步和互斥；")])]),t._v(" "),v("ul",[v("li",[t._v("互斥")])]),t._v(" "),v("blockquote",[v("p",[t._v("进程之间访问临界资源时相互排斥的现象；")])]),t._v(" "),v("ul",[v("li",[t._v("同步")])]),t._v(" "),v("blockquote",[v("p",[t._v("进程之间存在依赖关系，一个进程结束的输出作为另一个进程的输入。具有同步关系的一组并发进程之间发送的信息称为消息或者事件；")])]),t._v(" "),v("ul",[v("li",[t._v("并行")])]),t._v(" "),v("blockquote",[v("p",[t._v("单处理器中进程被交替执行，表现出一种并发的外部特征；在多处理器中，进程可以交替执行，还能重叠执行，\n实现并行处理，并行就是同事发生的多个并发事件，具有并发的含义，但并发不一定是并行，也就是说事件之间不一定要同一时刻发生；")])]),t._v(" "),v("ul",[v("li",[t._v("多线程")])]),t._v(" "),v("blockquote",[v("p",[t._v("多线程是进程中并发运行的一段代码，能够实现线程之间的切换执行；")])]),t._v(" "),v("ul",[v("li",[t._v("异步")])]),t._v(" "),v("blockquote",[v("p",[t._v("和同步相对，同步是顺序执行，而异步是彼此独立，在等待某个事件的过程中继续做自己的事，不要等待这一事件完成后再工作。\n线程是实现异步的一个方式，异步是让调用方法的主线程不需要同步等待另一个线程的完成，从而让主线程干其他事情。")])]),t._v(" "),v("ul",[v("li",[t._v("异步和多线程")])]),t._v(" "),v("blockquote",[v("p",[t._v("不是同等关系，异步是目的，多线程只是实现异步的一个手段，实现异步可以采用多线程技术或者交给其他进程来处理")])]),t._v(" "),v("ul",[v("li",[t._v("协程")])]),t._v(" "),v("p",[v("a",{attrs:{href:"https://www.jianshu.com/p/2782f8c49b2a",target:"_blank",rel:"noopener noreferrer"}},[t._v("coroutine协程详解"),v("OutboundLink")],1)]),t._v(" "),v("p",[v("a",{attrs:{href:"https://github.com/alibaba/coobjc/blob/master/README_cn.md#0x2-%E5%8D%8F%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"}},[t._v("协程"),v("OutboundLink")],1)]),t._v(" "),v("blockquote",[v("p",[t._v("协程，又称微线程，纤程。协程（Coroutine）是一种轻量级的用户态线程，实现的是非抢占式的调度，即由当前协程切换到其他协程由当前协程来控制。\n协程本身可以做在用户态，每个协程的体积比线程要小得多，因此一个进程可以容纳数量相当可观的协程")])]),t._v(" "),v("ul",[v("li",[t._v("信号量")])]),t._v(" "),v("p",[v("a",{attrs:{href:"https://blog.csdn.net/gatieme/article/details/50994533",target:"_blank",rel:"noopener noreferrer"}},[t._v("进程间通信之-信号量semaphore"),v("OutboundLink")],1)]),t._v(" "),v("blockquote",[v("p",[t._v("信号量的使用主要是用来保护共享资源，使得资源在一个时刻只有一个进程（线程）所拥有。")])]),t._v(" "),v("blockquote",[v("p",[t._v("信号量的值为正的时候，说明它空闲。所测试的线程可以锁定而使用它。若为0，说明它被占用，测试的线程要进入睡眠队列中，等待被唤醒。")])]),t._v(" "),v("ul",[v("li",[t._v("上下文切换")])]),t._v(" "),v("p",[v("a",{attrs:{href:"https://www.jianshu.com/p/6dde7f92951e",target:"_blank",rel:"noopener noreferrer"}},[t._v("什么是进程、线程、协程"),v("OutboundLink")],1)]),t._v(" "),v("blockquote",[v("p",[t._v("进程的切换者是操作系统，切换时机是根据操作系统自己的切换策略，用户是无感知的。\n进程的切换内容包括页全局目录、内核栈、硬件上下文，切换内容保存在内存中。进程切换过程是由“用户态到内核态到用户态”的方式，切换效率低。")])]),t._v(" "),v("blockquote",[v("p",[t._v("线程的切换者是操作系统，切换时机是根据操作系统自己的切换策略，用户无感知。\n线程的切换内容包括内核栈和硬件上下文。线程切换内容保存在内核栈中。线程切换过程是由“用户态到内核态到用户态”， 切换效率中等。")])]),t._v(" "),v("blockquote",[v("p",[t._v("协程的切换者是用户（编程者或应用程序），切换时机是用户自己的程序所决定的。\n协程的切换内容是硬件上下文，切换内存保存在用户自己的变量（用户栈或堆）中。协程的切换过程只有用户态，即没有陷入内核态，因此切换效率高。")])]),t._v(" "),v("h3",{attrs:{id:"线程数量控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线程数量控制"}},[t._v("#")]),t._v(" 线程数量控制")]),t._v(" "),v("ul",[v("li",[t._v("IO密集型")])]),t._v(" "),v("blockquote",[v("p",[t._v("线程数 = CPU核心数/(1-阻塞系数)")])]),t._v(" "),v("blockquote",[v("p",[t._v("Blocking Coefficient(阻塞系数)（一般为0.8~0.9之间） = 阻塞时间/(阻塞时间+使用CPU的时间)")])]),t._v(" "),v("ul",[v("li",[t._v("计算密集型")])]),t._v(" "),v("blockquote",[v("p",[t._v("CPU有超线程：线程数 = CPU内核线程数*2")]),t._v(" "),v("p",[t._v("CPU无超线程：线程数 = CPU核数+1")])]),t._v(" "),v("h2",{attrs:{id:"算法复杂度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#算法复杂度"}},[t._v("#")]),t._v(" 算法复杂度")]),t._v(" "),v("blockquote",[v("p",[v("code",[t._v("O(1)")]),t._v("、 "),v("code",[t._v("O(n)")]),t._v("、 "),v("code",[t._v("O(logn)")]),t._v("、 "),v("code",[t._v("O(nlogn)")]),t._v(" 可表示时间复杂度，也可以表示空间复杂度")])]),t._v(" "),v("blockquote",[v("p",[v("code",[t._v("O")]),t._v("加上"),v("code",[t._v("()")]),t._v("里面是一个函数"),v("code",[t._v("f()")]),t._v("即"),v("code",[t._v("O(f())")]),t._v("，函数指明某个算法的耗时/耗空间与数据增长量之间的关系。其中的"),v("code",[t._v("n")]),t._v("代表输入数据的量。")])]),t._v(" "),v("blockquote",[v("p",[t._v("如果"),v("code",[t._v("ax=N")]),t._v("（"),v("code",[t._v("a>0")]),t._v("，且"),v("code",[t._v("a≠1")]),t._v("），那么数"),v("code",[t._v("x")]),t._v("叫做以"),v("code",[t._v("a")]),t._v("为底"),v("code",[t._v("N")]),t._v("的对数，记作"),v("code",[t._v("x=logaN")]),t._v("，读作以"),v("code",[t._v("a")]),t._v("为底"),v("code",[t._v("N")]),t._v("的对数，其中"),v("code",[t._v("a")]),t._v("叫做对数的底数，"),v("code",[t._v("N")]),t._v("叫做真数。")])]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://blog.csdn.net/FeiPeng_/article/details/81030981",target:"_blank",rel:"noopener noreferrer"}},[t._v("算法复杂度中的O(logN)底数是什么"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://www.cnblogs.com/biehongli/p/11672380.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("时间复杂度o(1), o(n), o(logn), o(nlogn)"),v("OutboundLink")],1)])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("类型")]),t._v(" "),v("th",[t._v("意义")]),t._v(" "),v("th",[t._v("举例")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("O(1)")]),t._v(" "),v("td",[t._v("最低复杂度，常量值也就是耗时/ 耗空间与输入数据大小无关，无论输入数据增大多少倍，耗时/耗空间都不变")]),t._v(" "),v("td",[t._v("哈希算法就是典型的O(1)时间复杂度，无论数据规模多大，都可以在一次计算后找到目标 (不考虑冲突的话)")])]),t._v(" "),v("tr",[v("td",[t._v("O(n)")]),t._v(" "),v("td",[t._v("数据量增大几倍，耗时也增大几倍")]),t._v(" "),v("td",[t._v("遍历算法")])]),t._v(" "),v("tr",[v("td",[t._v("O(n^2)")]),t._v(" "),v("td",[t._v("对n个数排序，需要扫描 n x n 次")]),t._v(" "),v("td",[t._v("冒泡排序")])]),t._v(" "),v("tr",[v("td",[t._v("O(logn)")]),t._v(" "),v("td",[t._v("当数据增大n倍时，耗时增大logn 倍(这里的log是以2为底的，比 如，当数据增大256倍时，耗时只增大8倍,")]),t._v(" "),v("td",[t._v("二分查找就是O(logn)的算法，每找一次排除一半的可能，256个数据中查找只要找8次就可以找到目标")])]),t._v(" "),v("tr",[v("td",[t._v("O(nlogn)")]),t._v(" "),v("td",[t._v("就是n乘以logn,当数据增大256倍 时，耗时增大256*8=2048倍。这个复杂度高于线性低于平方。")]),t._v(" "),v("td",[t._v("归并排 序就是O(nlogn)的时间复杂度")])])])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("数据结构")]),t._v(" "),v("th",[t._v("查找")]),t._v(" "),v("th",[t._v("查找")]),t._v(" "),v("th",[t._v("插入")]),t._v(" "),v("th",[t._v("插入")]),t._v(" "),v("th",[t._v("删除")]),t._v(" "),v("th",[t._v("删除")]),t._v(" "),v("th",[t._v("遍历")])])]),t._v(" "),v("tbody",[v("tr",[v("td"),t._v(" "),v("td",[t._v("平均")]),t._v(" "),v("td",[t._v("最坏")]),t._v(" "),v("td",[t._v("平均")]),t._v(" "),v("td",[t._v("最坏")]),t._v(" "),v("td",[t._v("平均")]),t._v(" "),v("td",[t._v("最坏")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("数组")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("有序数组")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(n)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(N)")])]),t._v(" "),v("tr",[v("td",[t._v("链表")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(1)")]),t._v(" "),v("td",[t._v("O(1)")]),t._v(" "),v("td",[t._v("O(1)")]),t._v(" "),v("td",[t._v("O(1)")]),t._v(" "),v("td")]),t._v(" "),v("tr",[v("td",[t._v("有序链表")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(1)")]),t._v(" "),v("td",[t._v("O(1)")]),t._v(" "),v("td",[t._v("O(N)")])]),t._v(" "),v("tr",[v("td",[t._v("二叉查找树")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(N)")]),t._v(" "),v("td",[t._v("O(N)")])]),t._v(" "),v("tr",[v("td",[t._v("红黑树")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(N)")])]),t._v(" "),v("tr",[v("td",[t._v("平衡树")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(N)")])]),t._v(" "),v("tr",[v("td",[t._v("二叉堆 优先队列")]),t._v(" "),v("td",[t._v("O(1)")]),t._v(" "),v("td",[t._v("O(1)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(logN)")]),t._v(" "),v("td",[t._v("O(N)")])]),t._v(" "),v("tr",[v("td",[t._v("哈希表")]),t._v(" "),v("td",[t._v("O(1)")]),t._v(" "),v("td",[t._v("O(1)")]),t._v(" "),v("td",[t._v("O(1)")]),t._v(" "),v("td",[t._v("O(1)")]),t._v(" "),v("td",[t._v("O(1)")]),t._v(" "),v("td",[t._v("O(1)")]),t._v(" "),v("td",[t._v("O(N)")])])])]),t._v(" "),v("h2",{attrs:{id:"缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" 缓存")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://www.jianshu.com/p/d00348a9eb3b",target:"_blank",rel:"noopener noreferrer"}},[t._v("缓存穿透、缓存击穿和缓存雪崩实践"),v("OutboundLink")],1)])]),t._v(" "),v("ul",[v("li",[t._v("缓存穿透")])]),t._v(" "),v("blockquote",[v("p",[t._v("在高并发下，查询一个不存在的值时，缓存不会被命中，导致大量请求直接落到数据库上，如活动系统里面查询一个不存在的活动。")])]),t._v(" "),v("ul",[v("li",[t._v("缓存击穿")])]),t._v(" "),v("blockquote",[v("p",[t._v("在高并发下，对一个特定的值进行查询，但是这个时候缓存正好过期了，缓存没有命中，导致大量请求直接落到数据库上，如活动系统里面查询活动信息，但是在活动进行过程中活动缓存突然过期了。")])]),t._v(" "),v("ul",[v("li",[t._v("缓存雪崩")])]),t._v(" "),v("blockquote",[v("p",[t._v("在高并发下，大量的缓存key在同一时间失效，导致大量的请求落到数据库上，如活动系统里面同时进行着非常多的活动，但是在某个时间点所有的活动缓存全部过期。")])]),t._v(" "),v("ul",[v("li",[t._v("缓存命中率")])]),t._v(" "),v("blockquote",[v("p",[t._v("命中：直接从缓存中读取到想要的数据。")]),t._v(" "),v("p",[t._v("不命中：缓存中没有想要的数据，还需要到数据库进行一次查询才能读取到想要的数据。")])]),t._v(" "),v("ul",[v("li",[t._v("缓存丢失")])]),t._v(" "),v("p",[v("strong",[t._v("常见解决方案")])]),t._v(" "),v("ul",[v("li",[t._v("直接缓存NULL值（时间不能过长，防止影响正常值）")]),t._v(" "),v("li",[t._v("过滤器（如白名单，符合某种规则等）")]),t._v(" "),v("li",[t._v("限流")]),t._v(" "),v("li",[t._v("缓存预热")]),t._v(" "),v("li",[t._v("分级缓存")]),t._v(" "),v("li",[t._v("缓存永远不过期")])]),t._v(" "),v("p",[v("strong",[t._v("常见算法")])]),t._v(" "),v("ol",[v("li",[t._v("Least Frequently Used (LFU)")]),t._v(" "),v("li",[t._v("Least Recently Used (LRU)")]),t._v(" "),v("li",[t._v("Least Recently Used2 (LRU2)")]),t._v(" "),v("li",[t._v("Two Queue (2Q)")])]),t._v(" "),v("h2",{attrs:{id:"锁和事务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#锁和事务"}},[t._v("#")]),t._v(" 锁和事务")]),t._v(" "),v("p",[v("strong",[t._v("锁")])]),t._v(" "),v("blockquote",[v("p",[t._v("单进程的系统中，存在多线程同时操作一个公共变量，此时需要加锁对变量进行同步操作，保证多线程的操作线性执行消除并发修改。\n解决的是单进程中的多线程并发问题。")])]),t._v(" "),v("p",[v("strong",[t._v("分布式锁")])]),t._v(" "),v("blockquote",[v("p",[t._v("只要的应用场景是在集群模式的多个相同服务，可能会部署在不同机器上，解决进程间安全问题，防止多进程同时操作一个变量或者数据库。\n解决的是多进程的并发问题。")])]),t._v(" "),v("p",[v("strong",[t._v("事务")])]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://www.jianshu.com/p/73beee3c70e9",target:"_blank",rel:"noopener noreferrer"}},[t._v("事物概念"),v("OutboundLink")],1)])]),t._v(" "),v("blockquote",[v("p",[t._v("解决一个会话过程中，上下文的修改对所有数据库表的操作要么全部成功，要不全部失败。所以应用在service层。\n解决的是一个会话中的操作的数据一致性。")])]),t._v(" "),v("p",[v("strong",[t._v("分布式事务")])]),t._v(" "),v("blockquote",[v("p",[t._v("解决一个联动操作，比如一个商品的买卖分为:（1）添加商品到购物车，（2）修改商品库存-1；\n此时购物车服务和商品库存服务可能部署在两台电脑，这时候需要保证对两个服务的操作都全部成功或者全部回退。\n解决的是组合服务的数据操作的一致性问题。")])]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://www.cnblogs.com/lijingshanxi/p/9943836.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("简单聊聊事务补偿机制"),v("OutboundLink")],1)])]),t._v(" "),v("h2",{attrs:{id:"http授权认证"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http授权认证"}},[t._v("#")]),t._v(" HTTP授权认证")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://www.cnblogs.com/li1992/articles/9802716.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web开发几种常用的认证机制"),v("OutboundLink")],1)])]),t._v(" "),v("ul",[v("li",[t._v("SSO ：单点登录（Single sign-on）是在多个应用系统中，用户只需要登录一次就可以访问所有相互信任的应用系统。")]),t._v(" "),v("li",[t._v("CAS ：中央认证服务（Central Authentication Service），一个基于Kerberos票据方式实现SSO单点登录的框架，\n为Web 应用系统提供一种可靠的单点登录解决方法（属于 Web SSO ）")])]),t._v(" "),v("blockquote",[v("p",[t._v("Basic Auth：这种认证直接顺应HTTP协议的无状态性，每次执行业务的时候，将username与password参数发送给服务器进行验证")])]),t._v(" "),v("blockquote",[v("p",[t._v("Session：是指在客户端Cookie中存储一个Session Id。请求时携带Session Id，服务器从Session数据存储中找到对应的Session。\nNative App一般是不直接支持Cookie机制")])]),t._v(" "),v("h3",{attrs:{id:"oauth2和jwt区别与联系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#oauth2和jwt区别与联系"}},[t._v("#")]),t._v(" OAuth2和JWT区别与联系")]),t._v(" "),v("p",[v("strong",[t._v("JWT是一种认证协议")])]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://jwt.io",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://jwt.io"),v("OutboundLink")],1)])]),t._v(" "),v("blockquote",[v("p",[t._v("JWT（Json web token）提供了一种用于发布接入令牌（Access Token),并对发布的签名接入令牌进行验证的方法。\n令牌（Token）本身包含了一系列声明，应用程序可以根据这些声明限制用户对资源的访问。")])]),t._v(" "),v("blockquote",[v("p",[t._v("应用场景：JWT是用在前后端分离, 需要简单的对后台API进行保护时使用.(前后端分离无session, 频繁传用户密码不安全)")])]),t._v(" "),v("p",[v("strong",[t._v("OAuth2是一种授权框架")])]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://tools.ietf.org/html/rfc6749",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://tools.ietf.org/html/rfc6749"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2014/05/oauth_2_0.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰 – 理解 OAuth 2.0"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:""}},[t._v("OAuth2 CSRF攻击")])])]),t._v(" "),v("blockquote",[v("p",[t._v("OAuth2是一种授权框架，提供了一套详细的授权机制（指导）。用户或应用可以通过公开的或私有的设置，授权第三方应用访问特定资源。")])]),t._v(" "),v("blockquote",[v("p",[t._v("应用场景：OAuth2用在使用第三方账号登录的情况(比如使用weibo, qq, github登录某个app)")])]),t._v(" "),v("ul",[v("li",[t._v("OAuth2是一个相对复杂的协议, 有4种授权模式：")])]),t._v(" "),v("ol",[v("li",[t._v("授权码模式（authorization code）")]),t._v(" "),v("li",[t._v("密码模式（resource owner password credentials）")]),t._v(" "),v("li",[t._v("客户端模式（client credentials）")]),t._v(" "),v("li",[t._v("简化模式（implicit）")])]),t._v(" "),v("h2",{attrs:{id:"加密哈希"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#加密哈希"}},[t._v("#")]),t._v(" 加密哈希")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://www.cnblogs.com/xjnotxj/p/12716981.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("密码哈希（Password Hash）"),v("OutboundLink")],1)])]),t._v(" "),v("p",[v("strong",[t._v("哈希（散列）函数")])]),t._v(" "),v("ul",[v("li",[t._v("不推荐：RC4, MD4, MD5, SHA-0, SHA-1, DES, 2DES 等")]),t._v(" "),v("li",[t._v("推荐：SHA-2(SHA-256, SHA-384, SHA-512)、SHA-3、Blake2 等")]),t._v(" "),v("li",[t._v("密码哈希函数（Password Hash）：PBKDF2, Bcrypt, Scrypt, Argon2")])]),t._v(" "),v("p",[v("strong",[t._v("应对普通哈希容易被破解的策略")])]),t._v(" "),v("ul",[v("li",[t._v("加盐（salt）")])]),t._v(" "),v("blockquote",[v("p",[t._v("加盐就是对目标字段哈希前，拼接上另一个字段（salt）。注：盐值加到字段之前较为普遍。加盐对防彩虹表很有效。")])]),t._v(" "),v("ul",[v("li",[t._v("慢哈希")])])])}),[],!1,null,null,null);_.default=r.exports}}]);